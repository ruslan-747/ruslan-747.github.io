(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-829599a2"],{"20a0":function(e,t,a){},"2dc1":function(e,t,a){"use strict";a("301e")},"301e":function(e,t,a){},4092:function(e,t,a){"use strict";a("4d6e")},4351:function(e,t,a){},"4d6e":function(e,t,a){},5322:function(e,t,a){e.exports=a.p+"img/cpu2.43768eed.png"},6506:function(e,t,a){"use strict";var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"page-slider"},[a("b-carousel",{attrs:{id:"carousel-1",interval:3e3,controls:"","label-next":"","label-prev":""}},[e._t("default")],2)],1)},s=[],i={name:"PageSlider"},c=i,l=(a("cd10"),a("2877")),u=Object(l["a"])(c,n,s,!1,null,null,null);t["a"]=u.exports},"78f4":function(e,t,a){"use strict";a("d0ba")},8492:function(e,t,a){"use strict";var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("h2",{staticClass:"page-heading"},[e._t("default")],2)},s=[],i={name:"PageHeading"},c=i,l=(a("a9a8"),a("2877")),u=Object(l["a"])(c,n,s,!1,null,"1c7801b6",null);t["a"]=u.exports},"8cce":function(e,t,a){"use strict";a("20a0")},"8e0a":function(e,t,a){"use strict";var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",{staticClass:"page-text"},[e._t("default")],2)},s=[],i={name:"PageText"},c=i,l=(a("8cce"),a("2877")),u=Object(l["a"])(c,n,s,!1,null,"51329ced",null);t["a"]=u.exports},9238:function(e,t,a){e.exports=a.p+"img/cpu3.ea928ad1.png"},"94e9":function(e,t,a){e.exports=a.p+"img/cpu1.62433f7e.png"},"96bb":function(e,t,a){"use strict";a("bfdf")},"973e":function(e,t,a){"use strict";var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",{staticClass:"page-list"},[e._t("default")],2)},s=[],i={name:"PageList"},c=i,l=(a("78f4"),a("2877")),u=Object(l["a"])(c,n,s,!1,null,"000a779d",null);t["a"]=u.exports},"9b82":function(e,t,a){},a9a8:function(e,t,a){"use strict";a("9b82")},ac76:function(e,t,a){"use strict";var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("h3",{staticClass:"page-subheading"},[e._t("default")],2)},s=[],i={name:"PageSubheading"},c=i,l=(a("4092"),a("2877")),u=Object(l["a"])(c,n,s,!1,null,"6145377a",null);t["a"]=u.exports},bfdf:function(e,t,a){},cd10:function(e,t,a){"use strict";a("4351")},d0ba:function(e,t,a){},f4a2:function(e,t,a){"use strict";var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("li",{staticClass:"page-list-item"},[a("page-text",{staticClass:"page-list-item__text"},[e._t("default")],2)],1)},s=[],i=a("8e0a"),c={name:"PageListItem",components:{PageText:i["a"]}},l=c,u=(a("2dc1"),a("2877")),r=Object(u["a"])(l,n,s,!1,null,"d20dc2a0",null);t["a"]=r.exports},f85b:function(e,t,a){"use strict";a.r(t);var n=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"cpu"},[n("page-heading",[e._v("Процессор")]),n("page-subheading",[e._v("Определение")]),n("page-text",[e._v("Центра́льный проце́ссор (ЦП; также центра́льное проце́ссорное устро́йство — ЦПУ; англ. central processing unit, CPU, дословно — центральное обрабатывающее устройство, часто просто процессор) — электронный блок либо интегральная схема, исполняющая машинные инструкции (код программ), главная часть аппаратного обеспечения компьютера или программируемого логического контроллера. Иногда называют микропроцессором или просто процессором.")]),n("page-text",[e._v("Изначально термин центральное процессорное устройство описывал специализированный класс логических машин, предназначенных для выполнения сложных компьютерных программ. Вследствие довольно точного соответствия этого назначения функциям существовавших в то время компьютерных процессоров он естественным образом был перенесён на сами компьютеры. Начало применения термина и его аббревиатуры по отношению к компьютерным системам было положено в 1960-е годы. Устройство, архитектура и реализация процессоров с тех пор неоднократно менялись, однако их основные исполняемые функции остались теми же, что и прежде.")]),n("page-text",[e._v("Главными характеристиками ЦПУ являются: тактовая частота, производительность, энергопотребление, нормы литографического процесса, используемого при производстве (для микропроцессоров), и архитектура.")]),n("page-text",[e._v("Ранние ЦП создавались в виде уникальных составных частей для уникальных и даже единственных в своём роде компьютерных систем. Позднее от дорогостоящего способа разработки процессоров, предназначенных для выполнения одной единственной или нескольких узкоспециализированных программ, производители компьютеров перешли к серийному изготовлению типовых классов многоцелевых процессорных устройств. Тенденция к стандартизации компьютерных комплектующих зародилась в эпоху бурного развития полупроводниковых элементов, мейнфреймов и мини-компьютеров, а с появлением интегральных схем она стала ещё более популярной. Создание микросхем позволило ещё больше увеличить сложность ЦП с одновременным уменьшением их физических размеров. Стандартизация и миниатюризация процессоров привели к глубокому проникновению основанных на них цифровых устройств в повседневную жизнь человека. Современные процессоры можно найти не только в таких высокотехнологичных устройствах, как компьютеры, но и в автомобилях, калькуляторах, мобильных телефонах и даже в детских игрушках. Чаще всего они представлены микроконтроллерами, где, помимо вычислительного устройства, на кристалле расположены дополнительные компоненты (память программ и данных, интерфейсы, порты ввода-вывода, таймеры и др.). Современные вычислительные возможности микроконтроллера сравнимы с процессорами персональных ЭВМ десятилетней давности, а чаще даже значительно превосходят их показатели.")]),n("page-subheading",[e._v("Архитектура фон Неймана")]),n("page-text",[e._v("Большинство современных процессоров для персональных компьютеров в общем основано на той или иной версии циклического процесса последовательной обработки данных, изобретённого Джоном фон Нейманом.")]),n("page-text",[e._v("Дж. фон Нейман придумал схему постройки компьютера в 1946 году.")]),n("page-text",[e._v("Отличительной особенностью архитектуры фон Неймана является то, что инструкции и данные хранятся в одной и той же памяти.")]),n("page-text",[e._v("В различных архитектурах и для различных команд могут потребоваться дополнительные этапы. Например, для арифметических команд могут потребоваться дополнительные обращения к памяти, во время которых производится считывание операндов и запись результатов.")]),n("page-text",[e._v("Этапы цикла выполнения:")]),n("page-list",[n("page-list-item",[e._v("Процессор выставляет число, хранящееся в регистре счётчика команд, на шину адреса и отдаёт памяти команду чтения.")]),n("page-list-item",[e._v("Выставленное число является для памяти адресом; память, получив адрес и команду чтения, выставляет содержимое, хранящееся по этому адресу, на шину данных и сообщает о готовности.")]),n("page-list-item",[e._v("Процессор получает число с шины данных, интерпретирует его как команду (машинную инструкцию) из своей системы команд и исполняет её.")]),n("page-list-item",[e._v("Если последняя команда не является командой перехода, процессор увеличивает на единицу (в предположении, что длина каждой команды равна единице) число, хранящееся в счётчике команд; в результате там образуется адрес следующей команды.")])],1),n("page-section",[e._v("Конвейерная архитектура")]),n("page-text",[e._v("Конвейерная архитектура (англ. pipelining) была введена в центральный процессор с целью повышения быстродействия. Обычно для выполнения каждой команды требуется осуществить некоторое количество однотипных операций, например: выборка команды из ОЗУ, дешифровка команды, адресация операнда в ОЗУ, выборка операнда из ОЗУ, выполнение команды, запись результата в ОЗУ. Каждую из этих операций сопоставляют одной ступени конвейера. Например, конвейер микропроцессора с архитектурой MIPS-I содержит четыре стадии:")]),n("page-list",[n("page-list-item",[e._v("получение и декодирование инструкции,")]),n("page-list-item",[e._v("адресация и выборка операнда из ОЗУ,")]),n("page-list-item",[e._v("выполнение арифметических операций,")]),n("page-list-item",[e._v("сохранение результата операции.")])],1),n("page-subheading",[e._v("Как выглядит процессор")]),n("page-slider",[n("b-carousel-slide",{attrs:{"img-src":a("94e9")}}),n("b-carousel-slide",{attrs:{"img-src":a("5322")}}),n("b-carousel-slide",{attrs:{"img-src":a("9238")}})],1)],1)},s=[],i=a("6506"),c=a("f4a2"),l=a("973e"),u=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("h4",{staticClass:"page-section"},[e._t("default")],2)},r=[],g={name:"PageSection"},p=g,o=(a("96bb"),a("2877")),f=Object(o["a"])(p,u,r,!1,null,"7727047a",null),_=f.exports,d=a("8e0a"),v=a("ac76"),m=a("8492"),b={name:"Cpu",components:{PageText:d["a"],PageSubheading:v["a"],PageHeading:m["a"],PageSection:_,PageList:l["a"],PageListItem:c["a"],PageSlider:i["a"]}},x=b,h=Object(o["a"])(x,n,s,!1,null,"4e5454bf",null);t["default"]=h.exports}}]);
//# sourceMappingURL=chunk-829599a2.d2ac9c5e.js.map